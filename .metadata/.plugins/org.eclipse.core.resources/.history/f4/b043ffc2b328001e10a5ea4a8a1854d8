//2.Design the user interface for the ATM, including options such as withdrawing, depositing, and checking the balance.

package com.codsoft.internship.task4;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

class ATM
{
	private Map<String,Double> accountBalanceMap;

	public ATM()
	{
		accountBalanceMap = new HashMap<>();
	}

	public void addAccount(String accountNumber,double initialBalance)
	{
		accountBalanceMap.put(accountNumber,initialBalance);
	}

	public double checkBalance(String accountNumber)
	{
		if(accountBalanceMap.containsKey(accountNumber))
		{
			return accountBalanceMap.get(accountNumber);
		}
		else
		{
			System.out.println("Account Not Found !!!");
			return 0.0;
		}
	}

	public void deposit(String accountNumber,double amount)
	{
		if(accountBalanceMap.containsKey(accountNumber))
		{
			double currentBalance = accountBalanceMap.get(accountNumber);
			double newBalance = currentBalance + amount;
			accountBalanceMap.put(accountNumber,newBalance);
			System.out.println("Deposit Successful. New Balance : " + newBalance);
		}
		else
		{
			System.out.println("Account not found.");
		}
	}

	public void withdraw(String accountNumber,double amount)
	{
		if(accountBalanceMap.containsKey(accountNumber))
		{
			double currentBalance = accountBalanceMap.get(accountNumber);
			if(amount <= currentBalance)
			{
				double newBalance = currentBalance - amount;
				accountBalanceMap.put(accountNumber,newBalance);
				System.out.println("Withdrawl Successful. New Balance : " + newBalance);
			}
			else
			{
				System.out.println("Insufficient Funds.");
			}
		}
		else
		{
			System.out.println("Account Not Found.");
		}
	}

	public void displayAccounts()
	{
		System.out.println("Accounts in the ATM : ");
		for(Map.Entry<String,Double> entry : accountBalanceMap.entrySet())
		{
			System.out.println("Account Number : " + entry.getKey() + ", Balance : " + entry.getValue());
		}
	}
}

public class Second
{
	private static ATM atm = new ATM();

	public static void main(String args[]) throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		atm.addAccount("123456789",1000.0);
		atm.addAccount("987654321",500.0);

		displayMenu();

		int choice = getChoice();
		processChoice(choice);
	}

	private static void displayMenu()
	{
		System.out.println("---------- ATM MACHINE ----------");
		System.out.println("1. Check Balance");
		System.out.println("2. Deposit");
		System.out.println("3. Withdraw");
		System.out.println("4. Exit");

		System.out.print("Enter your choice : ");
	}

	private static int getChoice() throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int choice = Integer.parseInt(br.readLine());
		return choice;
	}

	private static void processChoice(int choice) throws Exception
	{
		switch(choice)
		{
			case 1:
					checkBalance();
					break;

			case 2:
					deposit();
					break;

			case 3:
					withdraw();
					break;

			case 4:
					System.out.println("Thank you for using the ATM. Goodbye!!!");
					break;

			default:
					System.out.println("Invalid Choice. Please try again.");
					processChoice(getChoice());
					break;
		}
	}

	private static void checkBalance() throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		System.out.print("Enter account number : ");
		String accountNumber = br.readLine();

		double balance = atm.checkBalance(accountNumber);
		System.out.println("Account Balance : " + balance);

		processChoice(getChoice());
	}

	private static void deposit() throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		System.out.print("Enter account number : ");
		String accountNumber = br.readLine();

		System.out.print("Enter deposit amount : ");
		double amount = Double.parseDouble(br.readLine());

		atm.deposit(accountNumber,amount);

		processChoice(getChoice());
	}

	private static void withdraw() throws Exception
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		System.out.print("Enter account number : ");
		String accountNumber = br.readLine();

		System.out.print("Enter withdrawal amount : ");
		double amount = Double.parseDouble(br.readLine());

		atm.withdraw(accountNumber,amount);

		processChoice(getChoice());
	}
}